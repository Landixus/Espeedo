//Copyright (c) <2016> <chiprobot>
//Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
//The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

#include <SPI.h>
#include <Hx711.h>
#include <Adafruit_GFX.h>
#include <Adafruit_ILI9340.h>

#define _sclk 14
#define _miso 12
#define _mosi 13
#define _cs 15
#define _dc 2
#define _rst 16 // bogus value till I work out what to do maybe 16

Adafruit_ILI9340 tft = Adafruit_ILI9340(_cs, _dc, _rst);

Hx711 scale(4, 5);
Hx711 set_gain();
Hx711 tare();
int gramm=0;
int oldgramm =0;
void setup() {
  Serial.begin(9600);
  while (!Serial);
  
  Serial.println("Espeedo Begins"); 
  tft.begin();
  tft.fillScreen(ILI9340_BLACK);
  tft.setCursor(0, 0);
  tft.setTextColor(ILI9340_WHITE);  tft.setTextSize(4);
  tft.print("ESPeedo");
   tft.setCursor(0, 0);
   tft.setTextColor(ILI9340_BLACK);  tft.setTextSize(4);
  tft.print("ESPeedo");
  
// tft.setRotation(1);

  Serial.println("start ");
  delay(1000);

}

void loop(void) {
   for(int timeline=0; timeline<320; timeline+=1) {
    yield();
      gramm=scale.getGram();  
     // Serial.println(gramm);
   if (oldgramm != gramm){
      tft.setCursor(0, 0);
   tft.setTextColor(ILI9340_BLACK); 
   //tft.drawLine(20,timeline-1,oldgramm,timeline-1, tft.Color565(0,0,0));
    tft.print(oldgramm);
    tft.setCursor(0, 0);
    tft.setTextColor(ILI9340_WHITE);
    tft.drawLine(100,timeline,100+gramm*5,timeline, tft.Color565(255,255,000));
   tft.print(gramm);

   }
   //delay(10);
    oldgramm=gramm;
   }
   delay(2000); 
    tft.fillScreen(ILI9340_BLACK);
}

unsigned long testText() {
  tft.fillScreen(ILI9340_BLACK);
  yield();
  unsigned long start = micros();
  tft.setCursor(0, 0);
  tft.setTextColor(ILI9340_WHITE);  tft.setTextSize(1);
  tft.println("Size_1");
  tft.setTextColor(ILI9340_YELLOW); tft.setTextSize(2);
  tft.println("Size_2");
  tft.setTextColor(ILI9340_RED);    tft.setTextSize(3);
  tft.println("Size_3");
  tft.setTextColor(ILI9340_GREEN);    tft.setTextSize(4);
  tft.println("Size_4");
  tft.setTextColor(ILI9340_BLUE);    tft.setTextSize(5);
  tft.println("Size_5");
  tft.setTextColor(ILI9340_MAGENTA);    tft.setTextSize(6);
  tft.println("Size_6");
  tft.setTextColor(ILI9340_WHITE);    tft.setTextSize(7);
  tft.println("Size_7");
}
